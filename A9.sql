-- CIS310-02
-- Turner Barnett
-- Assignment 9
-- Due Date: November 15, before 11am
-- Late Submission Date: November 17 6pm

-- PART 2
CREATE TRIGGER A9 
	ON LGLINE
	AFTER INSERT, DELETE, UPDATE
AS
BEGIN
		DECLARE @INV_NUM INT
		DECLARE @INV_TOTAL INT
		
		-- INSERT
		IF (EXISTS (SELECT * FROM INSERTED) AND
			NOT EXISTS ( SELECT * FROM DELETED))
		BEGIN
			DECLARE INSERT_CURSOR CURSOR FOR 
			SELECT INV_NUM, SUM(line_qty * line_price) AS TOTAL
			FROM INSERTED
			GROUP BY INV_NUM

			OPEN	INSERT_CURSOR
			FETCH NEXT FROM INSERT_CURSOR INTO @INV_NUM, @INV_TOTAL
			WHILE (@@FETCH_STATUS = 0)
			BEGIN
				UPDATE	lginvoice
				SET		@INV_TOTAL = LINE_PRICE * LINE_QTY
				WHERE INV_NUM = @INV_NUM
				FETCH NEXT FROM INSERT_CURSOR INTO @INV_NUM, @INV_TOTAL
			END
			CLOSE INSERT_CURSOR
			DEALLOCATE INSERT_CURSOR
		END
		-- DELETE
		IF (EXISTS (SELECT * FROM DELETED) AND 
			NOT EXISTS (SELECT * FROM INSERTED))
		BEGIN 
			DECLARE		DELETE_CURSOR CURSOR FOR
			SELECT INV_NUM, SUM(line_qty * line_price) AS TOTAL
			FROM DELETED
			GROUP BY INV_NUM

			OPEN	DELETE_CURSOR
			FETCH NEXT FROM DELETED_CURSOR INTO @INV_NUM, @INV_TOTAL
			WHILE (@@FETCH_STATUS = 0)
			BEGIN
				UPDATE	lginvoice
				SET		@INV_TOTAL = LINE_PRICE * LINE_QTY
				WHERE	INV_TOTAL = @INV_TOTAL
				FETCH NEXT FROM DELETE_CURSOR INTO @INV_NUM, @INV_TOTAL
			END
			CLOSE DELETE_CURSOR
			DEALLOCATE DELETE_CURSOR
		END
		
		-- UPDATE
		IF (EXISTS (SELECT * FROM DELETED) AND
		NOT EXISTS (SELECT * FROM INSERTED))
		BEGIN
				DECLARE CURSOR_UPDATE CURSOR FOR
				SELECT I.INV_NUM, INV_TOTAL AS TOTAL
				FROM INSERTED I INNER JOIN DELETED D ON I.inv_num = D.inv_num
				GROUP BY I.inv_num

				OPEN CURSOR_UPDATE
				FETCH NEXT FROM CURSOR_UPDATE INTO @INV_NUM, @INV_TOTAL
				WHILE (@@FETCH_STATUS = 0)
				BEGIN
						UPDATE	lginvoice
						SET @INV_TOTAL = LINE_PRICE * LINE_QTY
						WHERE INV_TOTAL = @INV_TOTAL
						FETCH NEXT FROM CURSOR_UPDATE INTO @INV_NUM, @INV_TOTAL
				END
		CLOSE CURSOR_UPDATE
		DEALLOCATE CURSOR_UPDATE
		END
END
GO

--PART 3

SELECT *
FROM LGLINE
ORDER BY inv_num

--INSERT
INSERT INTO LGLINE (inv_num, line_num, prod_sku, line_qty, line_price)
VALUES ('103','2','6056-PBS','6','8.59'), ('102','1','6056-PBS','6','8.59'), ('101','3','6056-PBS','6','8.59')

SELECT * FROM LGLINE
WHERE INV_NUM IN (101,102,103)

--UPDATE

UPDATE LGLINE
SET line_qty = line_qty+8
WHERE inv_num IN (101,102,103)

--DELETE
DELETE 
FROM LGLINE
WHERE inv_num IN (101,102,103)

SELECT INV_NUM, INV_TOTAL
FROM LGINVOICE
ORDER BY INV_NUM





				
